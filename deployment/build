#!/bin/bash      
clear
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
cd $DIR

printf "\n"
echo "############################################################"
echo "####           MATECAT CONVERTER  BUILD SCRIPT         #####"  
echo "############################################################"
printf "\n"

printf "Checking dependencies... "
mvn -help 2> /tmp/maven-error > /dev/null
if [ -s /tmp/maven-error ]
	then
		echo "Maven is needed to build the server, install it and try again"
		rm /tmp/maven-error
		exit -1
fi
echo "done! ğŸ˜„"
rm /tmp/maven-error

printf "Executing maven... "
cd ..
mvn -DskipTests=true clean compile package > /dev/null
echo "done! ğŸ˜„"

printf "Creating package dir... "
# Create target dir if not already existent.
mkdir -p target
cd target
# Remove the package dir if already existent, and create a new empty one
rm -f -r package
mkdir package
cd package
# Copy the jar
cp ../*.jar .
echo "done! ğŸ˜„"

printf "Building UNIX script... "
JARDIR=$(pwd)
FILENAME=$(find *.jar | tail -1)
cat > server <<- 'EOT'
	#!/bin/bash
	clear
	DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
	cd $DIR
EOT
# Run the application adding to classpath the "resource"
# dir previously created
echo "java -cp '.:$FILENAME' com.matecat.converter.Main" >> server
# Make script executable
chmod 755 server
echo "done! ğŸ˜„"

printf "Building Windows script... "
cat > server.bat <<- EOT
	@ECHO OFF
	CLS
	java -cp ".;$FILENAME" com.matecat.converter.Main
	PAUSE 
EOT
echo "done! ğŸ˜„"

printf "\nBuild completed at: "
echo $(pwd)

printf "\n"
